PHP avancado

- para saber quantos itens tem em um array, usamos a prop. count.
ex: count($lista);

- adicionar novos itens na lista:

a) lista com indice automatico:

$idadeList[] = 20; // aqui ele ve qual é o próximo indice disponivel

b) lista associativa:

$contas['555.555.555-55'] = [
	'titular' => 'Claudia',
	'saldo' => 2000
];

- O php só consegue trabalhar com chaves associativas que sejam
do tipo inteiro ou string apenas.
Se voce colocar uma chave do tipo boolean, e o valor for true
ele é convertido para 1 e se for false é convertido para 0.
No caso de um decimal ele remove o numero depois do ponto.

- a função exit() interrompe o fluxo do codigo.

-No php temos a possibilidade de informar o tipo de parametro
que queremos receber e qual tipo será retornado.
Ex: function sacar (array $conta, float $valor) : array{
....	
}

- a instrução echo pode ser substituida por sinal de =: 
ex: <?= $conta['titular'] ?>

- quando temos um array associativo para conseguirmos
concatenar (interpolar) com uma string, sem precisar o ".", temos
duas formas de fazer:

1) string simples, tiramos as aspas de dentro do colchete:
"$cpf $conta[titular] $conta[$saldo]" 

2) string complexa, basta abrir chaves {} no lugar do array
associativo. Ai nesse caso podemos voltar a usar aspas dentro
dentro da chave.
"$cpf {$conta['titular']} {$conta['$saldo']}"

3) Require: utilizamos quando é um arquivo obrigatório
para funcionamento de um outro arquivo, e caso esse arquivo
seja escrito com nome incorreto de cara já vai dar erro.
No caso do include, é para incluir arquivos que não são
obrigatórios.

4) Níveis de erro php:
a) E_notice - ele encontra um problema mas consegue se virar
b) warning - é um aviso que ele nao conseguiu executar determinada instrução
mas continua executando o restante do codigo.
c) error - deu ruim total ele nao consegue executar a partir daquele erro.
Seria o caso de termos o require e escrevermos o nome de um arquivo errado.

5) mb_strtoupper() coloca uma string com letra maiuscula. Para usar essa 
funcao devemos habilitar essa biblioteca no arquivo php.ini.
ctrl+ f e escrever mbstring > e vamos procurar "extension mbstring" >
remover o ; > ctrl + f extension_dir > tirar ; dessa linha (descomentar)

6) valor - é uma cópia do elemento
referencia - é exatemente aquele elemento

para passarmos uma referencia como parametro temos que passar o endereco
que ela ocupa na memoria ram. Para isso usamos o &.

function a (array &$conta) {} // aqui estamos passando exatamente a conta

7) funcao list - ele pega por exemplo os 3 primeiros elementos de um array
e armazena em variaveis.

list($idadeVinicius, $idadeJoao, $idadeMaria) = $idadeList;
o $idadeList é o array com indice "automatico".

para fazer com arrays associativos, precisamos informar o nome dos indices

list('titular' => $titular, 'saldo' => $saldo) = $contas;

outra formar mais enxuta de fazer isso é:

['titular' => $titular, 'saldo' => $saldo] = $contas;

8) Para apagar uma variavel, um item do array, usamos a funcao
unset($variavel)
Podemos colocar mais de uma variavel para ser removida no unset.
unset($variavel1, $variavel2)

